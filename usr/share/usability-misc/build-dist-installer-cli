#!/bin/bash

#set -x

true "$0: START"

set -o errexit
set -o nounset
set -o errtrace
set -o pipefail

command -v git >/dev/null || exit 1

toplevel="$(git rev-parse --show-toplevel)"
target="${toplevel}/usr/share/usability-misc/dist-installer-cli-standalone"
template="${toplevel}/usr/bin/dist-installer-cli"

## debian/control 'Builds-Depends: helper-scripts' is not easily possible,
## because then the build chroot would also need helper-scripts being installed.
if test -d /usr/libexec/helper-scripts/ ; then
  helper_path="/usr/libexec/helper-scripts/"
elif test -d "../helper-scripts/usr/libexec/helper-scripts/" ; then
  helper_path="../helper-scripts/usr/libexec/helper-scripts/"
else
  echo "$0: ERROR: helper_path neither available in
- /usr/libexec/helper-scripts/
nor in
../helper-scripts/usr/libexec/helper-scripts/" >&2
  exit 1
fi

cp "${template}" "${target}"

awk -v origin="${0##*/}" -v helper="source ${helper_path}" '
  $0 ~ helper {
    if (system("test -f "$2) != 0) {
      print origin ": error: sourced file does not exist: "$2 > "/dev/stderr"
      exit 1
    }
    print "##### BEGIN pasted by "origin " from file "$2
    system("cat "$2)
    print "##### END pasted by "origin " from file "$2
    next
  }
  1
' "${template}" | tee "${target}" >/dev/null

sed -i \
  -e "\,^\s*source /usr/libexec/helper-scripts/,d" \
  -e "3i ## DO NOT MODIFY, AUTOGENERATED CODE, MODIFY ../../bin/dist-installer-cli and the functions sourced" \
  "${target}"

echo "$0: SUCCESS"
