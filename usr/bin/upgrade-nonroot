#!/bin/bash

## Copyright (C) 2019 - 2025 ENCRYPTED SUPPORT LLC <adrelanos@whonix.org>
## See the file COPYING for copying conditions.

set -e

apt_update_msg='Updating apt packages...'
flatpak_update_msg='Updating flatpak packages.
This may take a while, even if flatpak reports "Nothing to do."'
update_command_failed='false'

# shellcheck source=../../../helper-scripts/usr/libexec/helper-scripts/package_installed_check.bsh
source /usr/libexec/helper-scripts/package_installed_check.bsh

if [ "$(id -un)" = 'root' ]; then
  ## Avoid using 'sudo' if already using account 'root'. Reasons:
  ## - Using 'sudo' is unnecessary in this case.
  ## - Would work in case of a user-sysmaint-split or sudo bug.
  printf '%s\n' "${apt_update_msg}"
  /usr/bin/apt-get-update-plus dist-upgrade || update_command_failed='true'
  printf '%s\n' "${flatpak_update_msg}"
  /usr/bin/flatpak -v update || update_command_failed='true'

## Check if 'sudo' is executable and use it, if so, irrespective of package
## 'user-sysmaint-split' installation status. This could be the case if one
## has run 'sudo chmod o+x /usr/bin/sudo' in sysmaint mode for debugging.
##
## 'command -v' cannot be used.
#if command -v sudo &>/dev/null ; then
## note:
## zsh: exits non-zero if found but not exectuable.
## bash: exits 0 if found but not executable
elif test -x /usr/bin/sudo ; then
  printf '%s\n' "${apt_update_msg}"
  /usr/bin/sudo /usr/bin/apt-get-update-plus dist-upgrade || update_command_failed='true'
  printf '%s\n' "${flatpak_update_msg}"
  /usr/bin/sudo /usr/bin/flatpak -v update || update_command_failed='true'

elif pkg_installed user-sysmaint-split; then
  ## Example use cases for using account 'root' with user-sysmaint-split installed:
  ## - root login
  ## - Qubes root console.
  if [ "$(id -un)" != 'sysmaint' ]; then
    1>&2 echo "ERROR: upgrade-nonroot cannot be used by accounts other than"
    1>&2 echo "'sysmaint' (or 'root') on this system. For more information, see"
    1>&2 echo "https://www.kicksecure.com/wiki/Sysmaint"
    exit 1
  fi
  printf '%s\n' "${apt_update_msg}"
  sudo /usr/bin/apt-get-update-plus dist-upgrade || update_command_failed='true'
  printf '%s\n' "${flatpak_update_msg}"
  sudo /usr/bin/flatpak -v update || update_command_failed='true'

else
  printf '%s\n' "${apt_update_msg}"
  sudo /usr/bin/apt-get-update-plus dist-upgrade || update_command_failed='true'
  printf '%s\n' "${flatpak_update_msg}"
  sudo /usr/bin/flatpak -v update || update_command_failed='true'
fi

if [ "${update_command_failed}" = 'true' ]; then
  exit 1
fi
